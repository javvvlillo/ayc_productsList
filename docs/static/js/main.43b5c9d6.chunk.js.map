{"version":3,"sources":["reportWebVitals.js","data/products.js","components/ProductCard.js","components/ProductsList.js","components/HomePage.js","components/LotesText.js","components/ProductPage.js","hooks/useForm.js","router/AppRouter.js","ProductsApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","products","ProductCard","id","name","customers","items","className","style","maxWidth","to","ProductsList","map","product","HomePage","LotesText","params","lotes","ProductPage","initialState","useState","values","setValues","target","value","useForm","number","formValues","handleInputChange","setLotes","show","setShow","productId","useParams","find","quantity","item","index","type","placeholder","autoComplete","onChange","onClick","e","preventDefault","Math","round","AppRouter","exact","path","component","ProductsApp","ReactDOM","render","document","getElementById"],"mappings":"sJAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCPDQ,EAAW,CACpB,CACI,GAAK,IACL,KAAO,sBACP,UAAa,QACb,MAAS,CACL,0CACA,gBACA,yBACA,iDACA,qCACA,0BACA,sBACA,wBACA,cACA,SACA,QACA,6BACA,OACA,6BACA,WACA,OACA,cAIR,CACI,GAAK,IACL,KAAO,yCACP,UAAa,SACb,MAAS,CACL,0CACA,gBACA,yBACA,mDACA,qCACA,0BACA,sBACA,wBACA,cACA,SACA,QACA,6BACA,OACA,6BACA,WACA,OACA,cAIR,CACI,GAAK,IACL,KAAO,yCACP,UAAa,QACb,MAAS,CACL,0CACA,gBACA,yBACA,mDACA,qCACA,0BACA,sBACA,wBACA,cACA,SACA,QACA,6BACA,OACA,6BACA,WACA,OACA,cAGR,CACI,GAAK,IACL,KAAO,gCACP,UAAa,SACb,MAAS,CACL,mCACA,mBACA,gCACA,eACA,oCACA,QACA,aACA,cACA,wBACA,OACA,QACA,2BACA,YACA,WACA,OACA,YACA,aAGR,CACI,GAAK,IACL,KAAO,kBACP,UAAa,SACb,MAAS,CACL,UACA,UACA,iDACA,mBACA,qBACA,qBACA,wBACA,cACA,SACA,YACA,QACA,OACA,YACA,WACA,OACA,YACA,c,cCrHCC,EAAc,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,GAAIC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,UAAwB,EAAZC,MAC/C,OACI,8BACI,qBAAKC,UAAU,YAAYC,MAAO,CAAEC,SAAU,KAA9C,SACI,qBAAKF,UAAU,iBAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAIA,UAAU,yBAAd,cAA0CH,EAA1C,OACA,oBAAGG,UAAU,wBAAb,cAAsC,sCAAUF,EAAV,UACtC,cAAC,IAAD,CAAMK,GAAE,WAAOP,GAAf,sCCNXQ,EAAe,WAExB,OACI,qBAAKJ,UAAU,eAAf,SAEQN,EAASW,KAAK,SAAAC,GAAO,OACjB,cAAC,EAAD,eAESA,GADCA,EAAQV,UCTzBW,EAAW,WACpB,OACI,qCACI,sEACA,uBACA,cAAC,EAAD,Q,sBCNCC,EAAY,SAACC,GAEtB,OACI,qBAAKT,UAAU,OAAf,SAEQ,qDAAuB,uCAAWS,EAAOC,MAAlB,OAAvB,+BCDHC,EAAc,WAAO,IAAD,ECHV,WAAyB,IAAvBC,EAAsB,uDAAP,GAAO,EAEfC,mBAASD,GAFM,mBAEpCE,EAFoC,KAE5BC,EAF4B,KAgB3C,MAAO,CAAED,EARiB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OAEzBD,EAAU,2BACHD,GADE,kBAEJE,EAAOnB,KAAOmB,EAAOC,UARhB,WACVF,EAAWH,KDA0BM,CAAQ,CAC7CC,OAAQ,IAHiB,mBAEtBC,EAFsB,KAEVC,EAFU,KAMrBF,EAAWC,EAAXD,OANqB,EAOHN,qBAPG,mBAOtBH,EAPsB,KAOfY,EAPe,OAYLT,oBAAS,GAZJ,mBAYtBU,EAZsB,KAYhBC,EAZgB,KAoBrBC,EAAcC,cAAdD,UAEFnB,EAAUZ,EAASiC,MAAK,SAAArB,GAAO,OAAIA,EAAQV,KAAO6B,KAGxD,IAAMnB,EACF,OAAO,cAAC,IAAD,CAAUH,GAAG,MA1BK,IA+BzByB,EAFI/B,EAA2BS,EAA3BT,KAAMC,EAAqBQ,EAArBR,UAAWC,EAAUO,EAAVP,MAazB,MATkB,WAAdD,IACA8B,EAAW,GAGG,UAAd9B,IACA8B,EAAW,GAKX,qCACA,qBAAK5B,UAAU,WAAf,SACI,qBAAIA,UAAU,cAAd,cAA+BH,EAA/B,IAAwCC,EAAxC,UAEJ,sBAAKE,UAAU,WAAf,UACI,qBAAKA,UAAU,QAAf,SAGI,oBAAIA,UAAU,8BAAd,SAEQD,EAAMM,KAAI,SAACwB,EAAMC,GAAP,OACN,qBAAI9B,UAAU,kBAAd,UAAgD4B,EAAhD,MAA+DC,IAAzBC,UAOtD,sBAAK9B,UAAU,QAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,uBACI+B,KAAK,SACLlC,KAAK,SACLG,UAAU,eACVgC,YAAY,YACZC,aAAe,MACfhB,MAASE,EACTe,SAAWb,MAInB,wBAAQU,KAAK,SAAS/B,UAAU,kBAAkBmC,QA5DzC,SAACC,GAClBA,EAAEC,iBACFf,EAASgB,KAAKC,MAAMpB,EAAO,KAC3BK,GAAQ,IAyDA,4BAIED,GAAQ,cAAC,EAAD,CAAWb,MAAQA,cE/EhC8B,EAAY,WACrB,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAYpC,IAClC,cAAC,IAAD,CAAOkC,OAAK,EAACC,KAAK,cAAcC,UAAYhC,IAE5C,cAAC,IAAD,CAAUR,GAAG,YCThByC,EAAc,WACvB,OACI,qBAAK5C,UAAU,YAAf,SACI,cAAC,EAAD,OCDZ6C,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1B/D,M","file":"static/js/main.43b5c9d6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const products = [\n    {\n        'id':'1',\n        'name':'Desayuno Dulce Amor',\n        'customers': 'doble',\n        'items': [\n            'Muffin de chocolate rellenos con manjar',\n            'Profisteroles',\n            'Tartaleta frutos rojos',\n            'Galleta de mantequilla con forma de corazón',\n            'Sándwich de miga jamón queso',\n            'Mini chocolates Sarotti',\n            'Macedonia de frutas',\n            'Panecillos para untar',\n            'Mantequilla',\n            'Manjar',\n            'Té',\n            'Mermelada envase de vidrio',\n            'Jugo',\n            'Sobre de chocolate Lucaffe',\n            'tazón',\n            'vaso',\n            'cubiertos'\n        ]\n    },\n\n    {\n        'id':'2',\n        'name':'Desayuno Dulce Amor Con Oso de Peluche',\n        'customers': 'simple',\n        'items': [\n            'Muffin de chocolate rellenos con manjar',\n            'Profisteroles',\n            'Tartaleta frutos rojos',\n            'Galletas de mantequeilla con forma de corazón',\n            'Sándwich de miga jamón queso',\n            'Mini chocolates Sarotti',\n            'Macedonia de frutas',\n            'Panecillos para untar',\n            'Mantequilla',\n            'Manjar',\n            'Té',\n            'Mermelada envase de vidrio',\n            'Jugo',\n            'Sobre de chocolate Lucaffe',\n            'tazón',\n            'vaso',\n            'cubiertos'\n        ]\n    },\n\n    {\n        'id':'3',\n        'name':'Desayuno Dulce Amor Con Oso de Peluche',\n        'customers': 'doble',\n        'items': [\n            'Muffin de chocolate rellenos con manjar',\n            'Profisteroles',\n            'Tartaleta frutos rojos',\n            'Galletas de mantequeilla con forma de corazón',\n            'Sándwich de miga jamón queso',\n            'Mini chocolates Sarotti',\n            'Macedonia de frutas',\n            'Panecillos para untar',\n            'Mantequilla',\n            'Manjar',\n            'Té',\n            'Mermelada envase de vidrio',\n            'Jugo',\n            'Sobre de chocolate Lucaffe',\n            'tazón',\n            'vaso',\n            'cubiertos'\n        ]\n    },\n    {\n        'id':'4',\n        'name':'Desayuno Enamorados Saludable',\n        'customers': 'simple',\n        'items': [\n            'Manqueue de vainilla o chocolate',\n            'Queque saludable',\n            'Sandwich en Pan pita integral',\n            'Frutos secos',\n            'Yogurt con mermelada de frambuesa',\n            'Fruta',\n            'mermeladas',\n            'Mantequilla',\n            'Panecillos para untar',\n            'Miel',\n            'Té',\n            'Jugo natural orgánico',\n            'cubiertos',\n            'tazón',\n            'vaso',\n            'cubiertos',\n            'tazón'\n        ]\n    },\n    {\n        'id':'5',\n        'name':'San Valentín',\n        'customers': 'simple',\n        'items': [\n            'Cupcake',\n            'Brownie',\n            'Galleta de mantequilla con forma de corazón',\n            'Sandwich de miga',\n            'Chocolates SArotti',\n            'MAcedonia de Fruta',\n            'Panecillos para untar',\n            'Mantequilla',\n            'Manjar',\n            'Mermelada',\n            'Té',\n            'Jugo',\n            'cubiertos',\n            'tazón',\n            'vaso',\n            'cubiertos',\n            'tazón'\n        ]\n    },\n]\n\n//TODO: HACER LAS TARJETAS Y PONER LA INFO DENTRO DE ELLAS PARA QUE SE VEA BONITO","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nexport const ProductCard = ({id, name, customers , items }) => {\n    return (\n        <div>\n            <div className=\"card ms-3\" style={{ maxWidth: 540 }}>\n                <div className=\"row no gutters\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title text-center\"> { name } </h5>\n                        <p className=\"card-text text-center\"> <small> { customers } </small></p>\n                        <Link to={`/${ id }`}>\n                                Información\n                            </Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\n\nimport { products } from \"../data/products\";\nimport { ProductCard } from './ProductCard';\n\nexport const ProductsList = () => {\n\n    return (\n        <div className=\"card-columns\">\n            {\n                products.map( product => (\n                    <ProductCard\n                        key={ product.id }\n                        { ...product }\n                    />\n                ))\n            }\n        </div>\n    )\n}\n","import React from 'react'\nimport { ProductsList } from './ProductsList'\n\nexport const HomePage = () => {\n    return (\n        <>\n            <h1> Productos día de los enamorados </h1>\n            <hr/>\n            <ProductsList /> \n        </>\n    )\n}\n","import React from 'react'\n\nexport const LotesText = (params) => {\n\n    return (\n        <div className=\"mt-2\">\n            {\n                <h3> Se deben realizar <strong> { params.lotes } </strong> lote(s) de desayunos </h3>\n            }\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { useParams, Redirect } from \"react-router-dom\";\nimport { products } from '../data/products';\nimport { useForm } from \"../hooks/useForm\";\nimport { LotesText } from './LotesText';\n\nexport const ProductPage = () => {\n\n    const [formValues, handleInputChange ] = useForm({\n        number: 0\n    });\n\n    const { number } = formValues;\n    const [lotes, setLotes] = useState();\n\n    // useEffect(() => {\n    // }, [number])\n\n    const [show, setShow] = useState(false);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setLotes(Math.round(number/10));\n        setShow(true);\n    }\n    \n    const { productId } = useParams();\n    \n    const product = products.find(product => product.id === productId);\n    \n\n    if ( !product ) {\n        return <Redirect to=\"/\" />\n    }\n    \n    const { name, customers, items } = product;\n\n    let quantity;\n\n    if (customers === 'simple') {\n        quantity = 1; \n    }\n\n    if (customers === 'doble') {\n        quantity = 2;\n    }\n\n\n    return (\n        <>\n        <div className=\"row mt-5\">\n            <h1 className=\"text-center\"> { name }({ customers }) </h1>\n        </div>\n        <div className=\"row mt-5\">\n            <div className=\"col-5\">\n                \n\n                <ul className=\"list-group list-group-flash\">\n                    {\n                        items.map((item, index) => (\n                            <li className=\"list-group-item\" key={ index }>{ quantity } x { item }</li>\n                        ))\n                    }\n                </ul>\n\n            </div>\n\n            <div className=\"col-5\">\n                <div className=\"form-group mt-10\">\n                    <input\n                        type=\"number\"\n                        name=\"number\"\n                        className=\"form-control\"\n                        placeholder=\"Desayunos\"\n                        autoComplete=  \"off\"\n                        value= { number }\n                        onChange={ handleInputChange }\n                        />\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={ handleSubmit }>\n                    Calcular Lotes\n                </button>\n\n                { show && <LotesText lotes={ lotes } /> }\n            </div>\n            \n           \n        </div>\n        </>\n    )\n}\n","import { useState } from \"react\";\n\n\nexport const useForm = ( initialState = {}) => {\n\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n    }\n\n    return [ values, handleInputChange, reset];\n\n}\n","import React from 'react'\nimport { HomePage } from '../components/HomePage';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport { ProductPage } from '../components/ProductPage';\n\nexport const AppRouter = () => {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={ HomePage } />\n                <Route exact path=\"/:productId\" component={ ProductPage } />\n\n                <Redirect to=\"/\" />\n            </Switch>\n        </Router>\n    )\n}\n","import React from 'react'\nimport { AppRouter } from './router/AppRouter'\n\nexport const ProductsApp = () => {\n    return (\n        <div className=\"container\">\n            <AppRouter />\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { ProductsApp } from './ProductsApp';\n\nReactDOM.render(\n    <ProductsApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}